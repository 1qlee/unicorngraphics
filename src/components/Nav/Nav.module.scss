.NavBar {
  width: 100vw;
  position: fixed;
  display: flex;
  padding: 16px 0;
  justify-content: space-between;
  background-color: var(--gray-1);
  z-index: 99;
}

.NavigationMenuRoot {
  position: relative;
  width: min-content;
  top: 0;
  left: 0;
  z-index: 99;

  @media screen and (max-width: 768px) {
    display: none;
  }
}

.NavigationMenuList {
  display: flex;
  justify-content: center;
  align-items: center;
  list-style: none;
  padding: 0;
  gap: var(--space-1);
}

.NavigationMenuLink {
  display: block;
  white-space: nowrap;
  color: var(--gray-12);
  font-weight: var(--font-weight-medium);
}

.NavigationMenuTrigger {
  background-color: var(--gray-1);
  color: var(--gray-12);
  gap: 2px;
}

.NavigationMenuTrigger:focus {
  box-shadow: 0 0 0 2px var(--gray-3);
}

.NavigationMenuTrigger:hover {
  background-color: var(--gray-3);
}

.NavigationMenuContent {
  position: absolute;
  top: 0;
  left: 0;
  padding: 16px;
  width: 100%;
  animation-duration: 250ms;
  animation-timing-function: ease;
  z-index: 99;

  &[data-motion='from-start'] {
    animation-name: enterFromLeft;
  }

  &[data-motion='from-end'] {
    animation-name: enterFromRight;
  }

  &[data-motion='to-start'] {
    animation-name: exitToLeft;
  }

  &[data-motion='to-end'] {
    animation-name: exitToRight;
  }
}

@media only screen and (min-width: 600px) {
  .NavigationMenuContent {
    width: auto;
  }
}

.NavigationMenuIndicator {
  display: flex;
  align-items: flex-end;
  justify-content: center;
  height: 10px;
  top: 100%;
  overflow: hidden;
  z-index: 99;
  transition: width, transform 250ms ease;

  &[data-state='visible'] {
    animation: fadeIn 200ms ease;
  }

  &[data-state='hidden'] {
    animation: fadeOut 200ms ease;
  }
}

.NavigationMenuViewport {
  position: absolute;
  transform-origin: top center;
  margin-top: 10px;
  width: 100%;
  background-color: white;
  border-radius: var(--radius-2);
  overflow: hidden;
  box-shadow: hsl(206 22% 7% / 35%) 0px 10px 38px -10px, hsl(206 22% 7% / 20%) 0px 10px 20px -15px;
  height: var(--radix-navigation-menu-viewport-height);
  transition: width, height, 300ms ease;

  &[data-state='open'] {
    animation: scaleIn 200ms ease;
  }

  &[data-state='closed'] {
    animation: scaleOut 200ms ease;
  }

  @media only screen and (min-width: 600px) {
    width: var(--radix-navigation-menu-viewport-width);
  }
}

.ViewportPosition {
  position: absolute;
  display: flex;
  justify-content: center;
  width: 100%;
  top: 100%;
  left: 40px;
  perspective: 2000px;
}

.CaretDown {
  position: relative;
  transition: transform 250ms ease;
}

[data-state='open'] > .CaretDown {
  transform: rotate(-180deg);
}

.Arrow {
  position: relative;
  top: 70%;
  background-color: white;
  width: 10px;
  height: 10px;
  transform: rotate(45deg);
  border-top-left-radius: 2px;
}

@keyframes enterFromRight {
  from {
    opacity: 0;
    transform: translateX(200px);
  }

  to {
    opacity: 1;
    transform: translateX(0);
  }
}

@keyframes enterFromLeft {
  from {
    opacity: 0;
    transform: translateX(-200px);
  }

  to {
    opacity: 1;
    transform: translateX(0);
  }
}

@keyframes exitToRight {
  from {
    opacity: 1;
    transform: translateX(0);
  }

  to {
    opacity: 0;
    transform: translateX(200px);
  }
}

@keyframes exitToLeft {
  from {
    opacity: 1;
    transform: translateX(0);
  }

  to {
    opacity: 0;
    transform: translateX(-200px);
  }
}

@keyframes scaleIn {
  from {
    opacity: 0;
    transform: rotateX(-30deg) scale(0.9);
  }

  to {
    opacity: 1;
    transform: rotateX(0deg) scale(1);
  }
}

@keyframes scaleOut {
  from {
    opacity: 1;
    transform: rotateX(0deg) scale(1);
  }

  to {
    opacity: 0;
    transform: rotateX(-10deg) scale(0.95);
  }
}

@keyframes fadeIn {
  from {
    opacity: 0;
  }

  to {
    opacity: 1;
  }
}

@keyframes fadeOut {
  from {
    opacity: 1;
  }

  to {
    opacity: 0;
  }
}